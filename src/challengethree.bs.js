// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

var node = /* Node */[
  "12",
  /* Node */[
    "11",
    /* Leaf */0,
    /* Leaf */0
  ],
  /* Node */[
    "14",
    /* Leaf */0,
    /* Leaf */0
  ]
];

function serialize(node) {
  var aux = function (_n, _acc) {
    while(true) {
      var acc = _acc;
      var n = _n;
      if (n) {
        var l = n[1];
        var x = n[0];
        if (n[2]) {
          if (l) {
            return aux(l, acc + x) + aux(n[2], acc);
          } else {
            _acc = acc + (" -1 " + x);
            _n = n[2];
            continue ;
          }
        } else {
          _acc = acc + (" " + (x + " -1 "));
          _n = l;
          continue ;
        }
      } else {
        return acc + "-1";
      }
    };
  };
  return aux(node, "");
}

function splitString(str) {
  return str.split(" ");
}

console.log(serialize(node).split(" "));

function deserialize(_lst) {
  while(true) {
    var lst = _lst;
    if (lst) {
      var xs = lst[1];
      var x = lst[0];
      var match = x === "-1";
      if (match) {
        _lst = xs;
        continue ;
      } else {
        return /* Node */[
                x,
                deserialize(xs),
                deserialize(xs)
              ];
      }
    } else {
      return /* Leaf */0;
    }
  };
}

console.log(deserialize($$Array.to_list(serialize(node).split(" "))));

function deserializewithArray(arr) {
  var aux = function (arr) {
    var len = arr.length;
    if (len !== 0) {
      return /* Node */[
              Caml_array.caml_array_get(arr, 0),
              aux($$Array.sub(arr, 1, len - 1 | 0)),
              aux($$Array.sub(arr, 1, len - 1 | 0))
            ];
    } else {
      return /* Leaf */0;
    }
  };
  return aux(arr);
}

console.log(deserializewithArray(serialize(node).split(" ")));

exports.node = node;
exports.serialize = serialize;
exports.splitString = splitString;
exports.deserialize = deserialize;
exports.deserializewithArray = deserializewithArray;
/*  Not a pure module */
